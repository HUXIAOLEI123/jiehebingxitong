{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\utils\\request.js","mtime":1678931188570},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\babel.config.js","mtime":1678931188406},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1678931314285},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\eslint-loader\\index.js","mtime":1678931311328}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","MessageBox","Message","store","getToken","getLoginInfo","isTokenExpired","$URL","successCode","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","headers","window","isRefreshing","refreshSubscribers","subscribeTokenRefresh","cb","push","onRrefreshed","token","map","interceptors","response","use","data","config","status","statusText","includes","handleCode","Promise","reject","JSON","stringify","url","error","undefined","code","message","type","duration","msg","Value","setTimeout","dispatch","then","location","reload"],"sources":["C:/Users/Administrator/Desktop/tuberculosis-fe/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { MessageBox, Message } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken,getLoginInfo} from '@/utils/auth'\r\nimport { isTokenExpired } from '@/utils/index'\r\nimport $URL from \"@/assets/js/requestUrl\";\r\n//请求操作正常code，支持String、Array、int多种类型,项目中和后端提前协商好，定义哪些状态码为success\r\nconst successCode=[200, 201,204, 0];\r\n//创建一个axios实例\r\nconst service = axios.create({\r\n  baseURL:  process.env.VUE_APP_BASE_API,//'/', \r\n  timeout: 60000, // 请求超时\r\n  headers: {\r\n    'Content-Type': \"application/json;charset=UTF-8\",\r\n    'Authorization':'Bearer' +' '+ getToken()\r\n  }\r\n})\r\nwindow.isRefreshing = false;//是否有请求正在刷新token\r\nlet refreshSubscribers = [];//被挂起的请求数组\r\n /*push所有请求到数组中*/\r\n function subscribeTokenRefresh (cb) {\r\n  refreshSubscribers.push(cb)\r\n }\r\n  /*刷新请求（refreshSubscribers数组中的请求得到新的token之后会自执行，用新的token去请求数据）*/\r\n function onRrefreshed (token) {\r\n  refreshSubscribers.map(cb => cb(token))\r\n }\r\n//请求拦截器\r\n// service.interceptors.request.use(\r\n//   config => {\r\n    \r\n//     //判断是否已登录\r\n//     if (store.getters.token) {\r\n//       //在请求头中添加token类型\r\n//       config.headers.Authorization =getLoginInfo().token_type+' '+getToken();\r\n//       //获取过期时间\r\n//       let expiredTime=getLoginInfo().expiredTime;\r\n//       //token是否将要过期或已经过期\r\n//       if (isTokenExpired(expiredTime)&&config.url.indexOf($URL.urls.refreshToken) === -1) {\r\n//         \r\n//           //是否正在刷新\r\n//           if (!window.isRefreshing) {\r\n//             //将刷新token的标志置为true\r\n//             window.isRefreshing = true;\r\n//             //发起刷新token的请求\r\n//             store.dispatch('user/refreshToken').then(res => {\r\n//               //将标志置为false\r\n//               window.isRefreshing = false;\r\n//               //成功刷新token\r\n//               config.headers.Authorization = res.token_Type + ' ' + res.token          \r\n//               //执行数组里的函数,重新发起被挂起的请求\r\n//               var res ={\r\n//                 token:1647825973938\r\n//               }\r\n//               onRrefreshed(res.token);\r\n//               //执行onRefreshed函数后清空数组中保存的请求\r\n//               refreshSubscribers = [];\r\n//             }).catch(err => {\r\n//               //刷新token失败到登录页\r\n//               MessageBox.alert('系统登录时间过长,将重新登录!','提示',{\r\n//                 confirmButtonText: '确定',\r\n//                 callback: action => {\r\n//                   store.dispatch('user/resetToken').then(() => {\r\n//                     location.reload();\r\n//                   })\r\n//                 }\r\n//               });          \r\n//             })\r\n//           }\r\n\r\n//         /*把请求(token)=>{....}都push到一个数组中*/\r\n//         let retry = new Promise((resolve, reject) => {\r\n//           /*(token) => {...}这个函数就是回调函数*/\r\n//           subscribeTokenRefresh((token) => {\r\n//             config.headers.Authorization = 'Bearer ' + token\r\n//             //将请求挂起\r\n//             resolve(config)\r\n//           })\r\n//         })\r\n//         return retry\r\n//       }\r\n//       return config  \r\n//     }else{\r\n//       //未登录直接返回配置信息\r\n//       return config\r\n//     }\r\n//   },error => {    \r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {    \r\n    let { data, config,status,statusText} = response;\r\n    // 判断请求code是否符合成功defiendCode\r\n    if (successCode.includes(status)) {\r\n      return data;\r\n    } else {\r\n      handleCode(status, statusText);\r\n      return Promise.reject('请求异常拦截:' + JSON.stringify({ url: config.url, status, statusText }) || \"Error\")\r\n    }\r\n  },\r\n  error => {\r\n    if (error === undefined || error.code === 'ECONNABORTED') {\r\n        Message({\r\n          message: '服务超时，请稍后重试',\r\n          type: 'error',\r\n          duration: 5000\r\n        })\r\n        return Promise.reject(error)\r\n    }\r\n    const { response, message } = error;\r\n    if (error.response && error.response.data) {\r\n      const { status, data } = response;\r\n      handleCode(status, data || message);\r\n      return Promise.reject(error)\r\n    }\r\n  }\r\n)\r\n/* 处理http返回错误状态码 */\r\nconst handleCode = (code, msg) => {\r\n  switch (code) {\r\n      case 401:\r\n          Message({\r\n            message:msg.Value || `客户端接口${code}异常`,\r\n            type: 'error',\r\n            duration: 6000\r\n          })\r\n          setTimeout(() => {\r\n            store.dispatch('user/resetToken').then(() => {\r\n              location.reload()\r\n            })\r\n          },1000)\r\n          break;\r\n      default:\r\n          Message({\r\n            message:msg || `客户端接口${code}异常`,\r\n            type: 'error',\r\n            duration: 6000\r\n          })\r\n          break;\r\n  }\r\n}\r\n\r\n/*\r\n * 返回状态码：\r\n * \r\n * 2xx 成功\r\n * 200 - OK 请求成功\r\n * 201 - Created 请求成功并创建了资源\r\n * 204 - No Content 请求成功，但是不应该返回任何东西，例如删除操作\r\n * \r\n * 4xx 客户端错误\r\n * 400 - Bad Request API消费者发送到服务器的请求是有错误的\r\n * 401 - Unauthorized 没有提供授权信息或者提供的授权信息不正确\r\n * 403 - Forbidden 身份认证已经成功，但是已认证的用户却无法访问请求的资源\r\n * 404 - Not Found 请求的资源不存在\r\n * 405 - Method Not Allowed 尝试发送请求到资源的时候，使用了不被支持的HTTP方法\r\n * 406 - Not Acceptable API消费者请求的表述格式并不被Web API所支持，并且API不\r\n *       会提供默认的表述格式\r\n * 409 - Conflict 请求与服务器当前状态冲突（通常指更新资源时发生的冲突）\r\n * 415 - Unsupported Media Type 与406正好相反，有一些请求必须带着数据发往服务器，\r\n *       这些数据都属于特定的媒体格式，如果API不支持该媒体类型格式，415就会被返回\r\n * 422 - Unprocessable Entity 它是HTTP拓展协议的一部分，它说明服务器已经懂得了\r\n *       Content Type，实体的语法也没有问题，但是服务器仍然无法处理这个实体数据 \r\n * \r\n * 5xx 服务器错误\r\n * 500 - Internal Server Error 服务器出现错误\r\n */\r\nexport default service\r\n"],"mappings":"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"}]}