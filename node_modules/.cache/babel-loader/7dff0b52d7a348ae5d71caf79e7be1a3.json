{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\homeComponents\\cascaderRegion.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\homeComponents\\cascaderRegion.vue","mtime":1678931188637},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\babel.config.js","mtime":1678931188406},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1678931314285},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":1678931316857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAcA;AACA;EACAA,cADA;EAEAC;IACA;IACAC;MACAC,eADA;MAEAC;IAFA,CAFA;IAMA;IACAC;MACAF,eADA;MAEAC;IAFA,CAPA;IAWA;IACAE;MACAH,sBADA;MAEAC;IAFA,CAZA;IAgBA;IACAG;MACAJ,sBADA;MAEAC;IAFA;EAjBA,CAFA;EAwBAI,IAxBA,kBAwBA;IACA;;IACA;MACAC,+BADA;MAEAC,WAFA;MAGAC,cAHA;MAIAV;QACAW,UADA;QAEAC,mBAFA;QAGAC,mBAHA;QAIAC,mBAJA;QAIA;QACAC,QALA,oBAKAC,IALA,EAKAC,OALA,EAKA;UACA;;UACA;YACAD;UACA;;UACA;;UACAE;YACAD;UACA,CAFA;QAGA;MAdA;IAJA;EAqBA,CA/CA;EAgDAE;IACAf;MACAgB,eADA;MAEAC,OAFA,mBAEAC,GAFA,EAEA;QACA;UACA;QACA;MACA;IANA,CADA;IASAjB;MACAe,eADA;MAEAC,OAFA,mBAEAC,GAFA,EAEA;QACA;UACA;QACA;MACA;IANA,CATA;IAiBAhB;MACAc,eADA;MAEAC,OAFA,mBAEAC,GAFA,EAEA;QACA;UACA;QACA;MACA;IANA;EAjBA,CAhDA;EA0EAC;IACA;AACA;AACA;IACAC,gBAJA,4BAIAC,KAJA,EAIA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAC,gCAFA;;cAAA;gBAAA;gBAEAC,QAFA,kBAEAA,QAFA;gBAIAC,KAJA,GAIA,iCAJA;gBAKA;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAVA;;IAWA;AACA;AACA;IACAC,gBAdA,8BAcA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC;kBAAAC;gBAAA,EADA;;cAAA;gBACAC,GADA;gBAEA;;gBACA;;cAHA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CAlBA;IAmBA;IACAC,gBApBA,4BAoBA1B,IApBA,EAoBA;MACA;QACA;MACA;;MACA,mBAJA,CAIA;;MACA;QAAA;;QACAA;QACAA;QACA2B;;QACA;UACA;UACA;QACA;;QACA;UACA;QACA;MACA;;MACA;IACA,CAtCA;IAuCA;IACAC,cAxCA,0BAwCAC,UAxCA,EAwCAX,KAxCA,EAwCA;MACA;QACAC;UACA;UACAW;UACApB;QACA,CAJA;MAKA,CANA;IAOA,CAhDA;IAiDAqB,UAjDA,sBAiDA/B,IAjDA,EAiDAkB,KAjDA,EAiDA;MACA;MACAlB;QACAgC;QACAX;MACA,CAHA;MAIA;IACA,CAxDA;IAyDAY,UAzDA,sBAyDAjC,IAzDA,EAyDA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;kBACA;gBACA,CAFA,MAEA;kBACA;;kBACA;gBACA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA;EAhEA;AA1EA","names":["name","props","clearable","type","default","isClearableVal","currentRegionCode","childRegionCode","data","selectedValue","options","regionData","lazy","label","value","checkStrictly","lazyLoad","node","resolve","_self","watch","immediate","handler","val","methods","getCurrentRegion","level","regions","Response","nodes","fullParentRegion","fullparentregion","regionCode","res","filterRegionData","newRegion","getChildRegion","RegionCode","result","handleData","e","changeHosp"],"sourceRoot":"src/views/homeComponents","sources":["cascaderRegion.vue"],"sourcesContent":["<template>\r\n  <!-- 行政区划子组件 -->\r\n  <!-- :options=\"options\" -->\r\n  <el-cascader\r\n    class=\"cascader-region\"\r\n    :props=\"props\"\r\n    :clearable=\"clearable\"\r\n    v-model=\"selectedValue\"\r\n    placeholder=\"\"\r\n    @change=\"changeHosp\"\r\n  ></el-cascader>\r\n</template>\r\n<script>\r\n\r\nimport { regions, fullparentregion, getRegions } from \"@/api/inputselect.js\";\r\nexport default {\r\n  name: \"Region\",\r\n  props: {\r\n    //是否可清空，不传默认是\r\n    clearable: {\r\n      type: [Boolean],\r\n      default: true,\r\n    },\r\n    //是否清空选项值\r\n    isClearableVal: {\r\n      type: [Boolean],\r\n      default: false,\r\n    },\r\n    //本级地区编码,传入此参数将作为行政区划第一级开始\r\n    currentRegionCode: {\r\n      type: [String, Number],\r\n      default: \"\",\r\n    },\r\n    //子级地区编码,传入此参数将获取所有上级行政区划\r\n    childRegionCode: {\r\n      type: [String, Number],\r\n      default: \"\",\r\n    },\r\n  },\r\n  data () {\r\n    let _self = this;\r\n    return {\r\n      selectedValue: ['360000000000'],\r\n      options: [],\r\n      regionData: [],\r\n      props: {\r\n        lazy: true,\r\n        label: \"RegionName\",\r\n        value: \"RegionCode\",\r\n        checkStrictly: true, //控制单选选择任意一级选项\r\n        lazyLoad (node, resolve) {\r\n          let localCode = (JSON.parse(localStorage.getItem('userInfo')) || {}).authRegionCode;\r\n          if (!node.value) {\r\n            node.value = localCode\r\n          }\r\n          let { level } = node;\r\n          _self.getChildRegion(node?.value, level).then((res) => {\r\n            resolve(res);\r\n          });\r\n        },\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    isClearableVal: {\r\n      immediate: true,\r\n      handler (val) {\r\n        if (val) {\r\n          this.selectedValue = [];\r\n        }\r\n      },\r\n    },\r\n    currentRegionCode: {\r\n      immediate: true,\r\n      handler (val) {\r\n        if (val) {\r\n          this.getCurrentRegion();\r\n        }\r\n      },\r\n    },\r\n    childRegionCode: {\r\n      immediate: true,\r\n      handler (val) {\r\n        if (val) {\r\n          this.fullParentRegion();\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * 1.获取传递的行政区划数据\r\n     */\r\n    async getCurrentRegion (level) {\r\n\r\n      const { Response } = await regions(this.currentRegionCode);\r\n\r\n      let nodes = this.handleData(Response, level);\r\n      this.options = nodes;\r\n    },\r\n    /**\r\n     * 2.根据传递的行政区划编码获取它的所有上级及本身\r\n     */\r\n    async fullParentRegion () {\r\n      const res = await fullparentregion({ regionCode: this.childRegionCode });\r\n      this.options = this.filterRegionData(res);\r\n      this.changeHosp(this.selectedValue)\r\n    },\r\n    //递归处理行政区划数据\r\n    filterRegionData (data) {\r\n      if (!data && data.length) {\r\n        return [];\r\n      }\r\n      let newRegion = []; //组装新数据\r\n      for (let i = 0, len = data.length; i < len; i++) {\r\n        data[i].leaf = data[i].RegionLevel >= 6;\r\n        data[i].children = data[i]?.Children;\r\n        newRegion.push(data[i]);\r\n        if (this.childRegionCode == data[i].RegionCode) {\r\n          this.selectedValue = data[i].CodeRelationShip.split(\",\");\r\n          this.selectedValue.push(this.childRegionCode);\r\n        }\r\n        if (data[i]?.Children) {\r\n          this.filterRegionData(data[i].Children);\r\n        }\r\n      }\r\n      return newRegion;\r\n    },\r\n    //获取下级行政区划数据\r\n    getChildRegion (RegionCode, level) {\r\n      return new Promise((resolve, reject) => {\r\n        regions(RegionCode).then(res => {\r\n          let result;\r\n          result = res.Response\r\n          resolve(result)\r\n        })\r\n      })\r\n    },\r\n    handleData (data, level) {\r\n      let nodes = [];\r\n      data.forEach((e) => {\r\n        e.leaf = level >= 6;\r\n        nodes.push(e);\r\n      });\r\n      return nodes;\r\n    },\r\n    async changeHosp (data) {\r\n      if (data.length > 0) {\r\n        this.$emit(\"changeRegion\", data[data.length - 1]);\r\n      } else {\r\n        this.$emit(\"changeRegion\", '360000000000');\r\n        this.selectedValue = this.$options.data().selectedValue\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n</style>"]}]}