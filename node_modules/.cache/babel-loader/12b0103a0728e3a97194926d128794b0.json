{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\components\\MyCascader\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\components\\MyCascader\\index.vue","mtime":1678931188507},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\babel.config.js","mtime":1678931188406},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1678931314285},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":1678931316857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAiBA;AACA;EACAA,kBADA;EAEAC;IACAC,aADA;IAEAC;EAFA,CAFA;EAMAC;IACAC,sBADA;IAEAC;MACAC,aADA;MAEAC;IAFA,CAFA;IAMAC;MACAF,aADA;MAEAC;IAFA,CANA;IAUAE;MACAH,aADA;MAEAC;IAFA,CAVA;IAcAG;MACAJ,YADA;MAEAC;IAFA,CAdA;IAkBAJ;MACAG,YADA;MAEAC,OAFA,sBAEA;QACA;MACA;IAJA,CAlBA;IAwBA;IACAI;MACAL,aADA;MAEAC;IAFA;EAzBA,CANA;EAqCAK;IACAC;MACAC,GADA,iBACA;QACA;MACA,CAHA;MAIAC,GAJA,eAIAX,KAJA,EAIA;QACA;MACA;IANA,CADA;IASAY,SATA,uBASA;MACA;QAAAC;MAAA;IACA;EAXA,CArCA;EAkDAC;IACAL,SADA,qBACAM,CADA,EACAC,CADA,EACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACAD,CADA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAEAE;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BAAA,KACA,qBADA;8BAAA;8BAAA;4BAAA;;4BAAA;4BAAA;4BAAA,OAEA,qCAFA;;0BAAA;4BAAA;4BAEA,aAFA;4BAAA;4BAAA;;0BAAA;4BAIA;;0BAJA;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA;;kBAAA;oBAAA;kBAAA;gBAAA,IAFA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUA;EAXA,CAlDA;EA+DAC,OA/DA,qBA+DA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC,cADA,GACA,6CADA;cAAA;cAAA,OAEAF;gBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA,KACA,sBADA;4BAAA;4BAAA;0BAAA;;0BAAA;0BAAA;0BAAA,OAEA,sCAFA;;wBAAA;0BAAA;0BAEA,cAFA;0BAAA;0BAAA;;wBAAA;0BAIA;;wBAJA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA;;gBAAA;kBAAA;gBAAA;cAAA,IAFA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EASA,CAxEA;EAyEAG,OAzEA,qBAyEA;IACA;EACA,CA3EA;EA4EAC,IA5EA,kBA4EA;IACA;MACAC;IADA;EAGA,CAhFA;EAiFAC;IACA;IACAC,iBAFA,6BAEAC,IAFA,EAEA;MACA;QACA;MACA;;MACA,mBAJA,CAIA;;MACA;MACAC;;MACA;QACA;UAAA;;UACA;YACAC;YACA;UACA,CAHA,MAGA;YACAD;UACA;QACA;MACA;;MACA;IACA,CApBA;IAqBAE,YArBA,wBAqBAC,IArBA,EAqBA;MACA;QACA;QACA;QACA;MACA;IACA,CA3BA;IA4BAC,cA5BA,0BA4BAD,IA5BA,EA4BAE,OA5BA,EA4BA;MACA;MACAC;QAAAC;QAAAC;MAAA;QACAH;MACA,CAFA;IAGA;EAjCA;AAjFA","names":["name","model","prop","event","props","value","disabled","type","default","clearable","showAllLevels","placeholder","isAccessControl","computed","bindValue","get","set","bindProps","lazyLoad","watch","n","o","regions","created","authRegionCode","mounted","data","options","methods","filterOneHospData","list","fn","newRegion","handleChange","node","lazyLoadMethod","resolve","getRegions","Reg_RegionCode","PageSize"],"sourceRoot":"src/components/MyCascader","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"index\">\r\n    <el-cascader\r\n      style=\"width: 100%\"\r\n      ref=\"cascaderMallCatergory\"\r\n      v-model=\"bindValue\"\r\n      :options=\"options\"\r\n      :show-all-levels=\"showAllLevels\"\r\n      :props=\"bindProps\"\r\n      @change=\"handleChange\"\r\n      :placeholder=\"placeholder\"\r\n      :clearable=\"clearable\"\r\n    ></el-cascader>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { regions, getRegions } from \"@/api/inputselect.js\";\r\nexport default {\r\n  name: \"MyCascader\",\r\n  model: {\r\n    prop: \"value\",\r\n    event: \"cas-change\",\r\n  },\r\n  props: {\r\n    value: [String, Array],\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    clearable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    showAllLevels: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    props: {\r\n      type: Object,\r\n      default () {\r\n        return {};\r\n      },\r\n    },\r\n    //是否权限控制\r\n    isAccessControl: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n\r\n  },\r\n  computed: {\r\n    bindValue: {\r\n      get () {\r\n        return this.value;\r\n      },\r\n      set (value) {\r\n        this.$emit(\"cas-change\", value);\r\n      },\r\n    },\r\n    bindProps () {\r\n      return Object.assign(this.props, { lazyLoad: this.lazyLoadMethod });\r\n    },\r\n  },\r\n  watch: {\r\n    async bindValue (n, o) {\r\n      if (n) {\r\n        await regions(n).then(async (res) => {\r\n          if (this.isAccessControl) {\r\n            this.options = [...await this.filterOneHospData(res.Response)]\r\n          } else {\r\n            this.options = res.Response;\r\n          }\r\n        });\r\n      }\r\n    },\r\n  },\r\n  async created () {\r\n    let authRegionCode = this.$utilsFun.getUserInfo().authRegionCode;\r\n    await regions(authRegionCode).then(async (res) => {\r\n      if (this.isAccessControl) {\r\n        this.options = [...await this.filterOneHospData(res.Response)]\r\n      } else {\r\n        this.options = res.Response;\r\n      }\r\n    });\r\n  },\r\n  mounted () {\r\n    this.bindValue = ''\r\n  },\r\n  data () {\r\n    return {\r\n      options: [],\r\n    };\r\n  },\r\n  methods: {\r\n    //处理机构从哪一级开始\r\n    filterOneHospData (list) {\r\n      if (!list && list.length) {\r\n        return [];\r\n      }\r\n      let newRegion = []; //组装新数据\r\n      let authRegionCode = this.$utilsFun.getUserInfo().authRegionCode\r\n      fn(list);\r\n      function fn (data) {\r\n        for (let i = 0, len = data.length; i < len; i++) {\r\n          if (data[i].RegionCode === authRegionCode) {\r\n            newRegion.push(data[i]);\r\n            break;\r\n          } else if (data[i]?.Children) {\r\n            fn(data[i].Children);\r\n          }\r\n        }\r\n      }\r\n      return newRegion;\r\n    },\r\n    handleChange (node) {\r\n      if (this.bindValue.length != 0) {\r\n        let arr = this.$refs['cascaderMallCatergory'].getCheckedNodes()[0].pathLabels\r\n        this.$emit('callbackbindValue', this.bindValue)\r\n        this.$emit('callbacklable', arr)\r\n      }\r\n    },\r\n    lazyLoadMethod (node, resolve) {\r\n      if (node.level == 0) return\r\n      getRegions({ Reg_RegionCode: node.value, PageSize: 999 }).then((res) => {\r\n        resolve(res.Response.items);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]}]}