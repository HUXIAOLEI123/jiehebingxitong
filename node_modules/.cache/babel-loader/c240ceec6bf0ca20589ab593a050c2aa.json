{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\testManagement\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\testManagement\\index.vue","mtime":1678931188727},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\babel.config.js","mtime":1678931188406},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1678931314285},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":1678931316857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL3R1YmVyY3Vsb3Npcy1mZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0FkbWluaXN0cmF0b3IvRGVza3RvcC90dWJlcmN1bG9zaXMtZmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkM6L1VzZXJzL0FkbWluaXN0cmF0b3IvRGVza3RvcC90dWJlcmN1bG9zaXMtZmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IFJlZ3VsYXRvcnlJbmZvIH0gZnJvbSAnQC9hcGkvcmVwb3J0JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0ZXN0TWFuYWdlbWVudDAyJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVIZWlnaHQ6ICIzMDAiLAogICAgICAvL3RhYmxl6auY5bqmCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0UmVndWxhdG9yeUluZm8oKTsKICAgIHRoaXMuaW5pdFRhYmxlSGVpZ2h0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0VGFibGVIZWlnaHQ6IGZ1bmN0aW9uIGluaXRUYWJsZUhlaWdodCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYXZhaWxIZWlnaHQgPSB3aW5kb3cuc2NyZWVuLmF2YWlsSGVpZ2h0OyAvL+mhtemdouWPr+inhuWMlumrmOW6pgoKICAgICAgICBfdGhpcy50YWJsZUhlaWdodCA9IGF2YWlsSGVpZ2h0IC0gMzAwOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDooajmoLzlhoXlrrnlsYXkuK0KICAgIGhlYWRTdHlsZTogZnVuY3Rpb24gaGVhZFN0eWxlKCkgewogICAgICByZXR1cm4gJ3RleHQtYWxpZ246bGVmdDsnOwogICAgfSwKICAgIGhlYWRTdHlsZXM6IGZ1bmN0aW9uIGhlYWRTdHlsZXMoKSB7CiAgICAgIHJldHVybiAndGV4dC1hbGlnbjpsZWZ0O2NvbG9yOiAjMzczNzM3ICFpbXBvcnRhbnQ7JzsKICAgIH0sCiAgICBnZXRSZWd1bGF0b3J5SW5mbzogZnVuY3Rpb24gZ2V0UmVndWxhdG9yeUluZm8oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdmFyIG9wdGlvbiA9IHsKICAgICAgICBSZWdpb25Db2RlOiB0aGlzLiR1dGlsc0Z1bi5nZXRVc2VySW5mbygpLmF1dGhSZWdpb25Db2RlCiAgICAgIH07CiAgICAgIFJlZ3VsYXRvcnlJbmZvKG9wdGlvbikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLnRhYmxlRGF0YSA9IF90b0NvbnN1bWFibGVBcnJheShyZXMuUmVzcG9uc2UpOwogICAgICAgIF90aGlzMi5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOihqOagvOS4i+mSuwogICAgbG9hZDogZnVuY3Rpb24gbG9hZCh0cmVlLCB0cmVlTm9kZSwgcmVzb2x2ZSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBvcHRpb25zLCByZXMsIGEsIGFycmRhdGE7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgICAgUmVnaW9uQ29kZTogdHJlZS5SZWdpb25Db2RlCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gUmVndWxhdG9yeUluZm8ob3B0aW9ucyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzLlN0YXR1c0NvZGUgPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGEgPSByZXMuUmVzcG9uc2UubGVuZ3RoOwogICAgICAgICAgICAgICAgYXJyZGF0YSA9IHJlcy5SZXNwb25zZS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uUmVnaW9uQ29kZSAhPT0gJzAnOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXNvbHZlKF90b0NvbnN1bWFibGVBcnJheShhcnJkYXRhKSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;EACAA,wBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,kBADA;MACA;MACAC,aAFA;MAGAC;IAHA;EAKA,CARA;EASAC,OATA,qBASA;IACA;IACA;EACA,CAZA;EAaAC;IACAC,eADA,6BACA;MAAA;;MACA;QACA,4CADA,CACA;;QACA;MACA,CAHA;IAIA,CANA;IAOA;IACAC,SARA,uBAQA;MACA;IACA,CAVA;IAWAC,UAXA,wBAWA;MACA;IACA,CAbA;IAcAC,iBAdA,+BAcA;MAAA;;MACA;MACA;QAAAC;MAAA;MACAC;QAAA;QAAA;MAAA;IACA,CAlBA;IAmBA;IACAC,IApBA,gBAoBAC,IApBA,EAoBAC,QApBA,EAoBAC,OApBA,EAoBA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,OADA,GACA;kBAAAN;gBAAA,CADA;gBAAA;gBAAA,OAEAC,uBAFA;;cAAA;gBAEAM,GAFA;;gBAAA,MAGAA,qBAHA;kBAAA;kBAAA;gBAAA;;gBAIAC,CAJA,GAIAD,mBAJA;gBAKAE,OALA,GAKAF;kBACA;gBACA,CAFA,CALA;gBAQAF;gBARA;gBAAA;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYA;EAhCA;AAbA","names":["name","data","tableHeight","tableData","loading","mounted","methods","initTableHeight","headStyle","headStyles","getRegulatoryInfo","RegionCode","RegulatoryInfo","load","tree","treeNode","resolve","options","res","a","arrdata"],"sourceRoot":"src/views/testManagement","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"box\">\r\n    <el-table\r\n      :data=\"tableData\"\r\n      border\r\n      v-loading=\"loading\"\r\n      :header-cell-style=\"headStyles\"\r\n      :height=\"tableHeight\"\r\n      :cell-style=\"headStyle\"\r\n      row-key=\"RegionCode\"\r\n      lazy\r\n      :load=\"load\"\r\n      :tree-props=\"{ children: 'children', hasChildren: 'RegionCode' }\"\r\n    >\r\n      <el-table-column prop=\"RegionName\" label=\"行政区划\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"XCJHBRS\" label=\"现存结核病人数\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"ZRXZ\" label=\"昨日新增建档病人数\"></el-table-column>\r\n      <el-table-column prop=\"ZYBRS\" label=\"治愈病人数\"></el-table-column>\r\n      <el-table-column prop=\"FFBRS\" label=\"复发病人数\"></el-table-column>\r\n      <el-table-column prop=\"BYXYANGX\" label=\"病原学结果阳性\"></el-table-column>\r\n      <el-table-column prop=\"BYXYINX\" label=\"病原学结果阴性\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { RegulatoryInfo } from '@/api/report'\r\nexport default {\r\n  name: 'testManagement02',\r\n  data () {\r\n    return {\r\n      tableHeight: \"300\", //table高度\r\n      tableData: [],\r\n      loading: false\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getRegulatoryInfo()\r\n    this.initTableHeight();\r\n  },\r\n  methods: {\r\n    initTableHeight () {\r\n      this.$nextTick(() => {\r\n        let availHeight = window.screen.availHeight; //页面可视化高度\r\n        this.tableHeight = availHeight - 300;\r\n      });\r\n    },\r\n    // 表格内容居中\r\n    headStyle () {\r\n      return 'text-align:left;'\r\n    },\r\n    headStyles () {\r\n      return 'text-align:left;color: #373737 !important;'\r\n    },\r\n    getRegulatoryInfo () {\r\n      this.loading = true\r\n      let option = { RegionCode: this.$utilsFun.getUserInfo().authRegionCode }\r\n      RegulatoryInfo(option).then((res) => { this.tableData = [...res.Response]; this.loading = false })\r\n    },\r\n    // 表格下钻\r\n    async load (tree, treeNode, resolve) {\r\n      let options = { RegionCode: tree.RegionCode }\r\n      let res = await RegulatoryInfo(options)\r\n      if (res.StatusCode == 200) {\r\n        let a = res.Response.length\r\n        let arrdata = res.Response.filter(function (item) {\r\n          return item.RegionCode !== '0'\r\n        })\r\n        resolve([...arrdata])\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n  },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.box {\r\n  overflow: auto;\r\n}\r\n</style>"]}]}