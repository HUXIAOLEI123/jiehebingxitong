{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\utils\\validate.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\utils\\validate.js","mtime":1678931188571},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\babel.config.js","mtime":1678931188406},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1678931314285},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\eslint-loader\\index.js","mtime":1678931311328}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudGVzdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwoKLyoqDQogKiBAcGFyYW0ge3N0cmluZ30gcGF0aA0KICogQHJldHVybnMge0Jvb2xlYW59DQogKi8KZXhwb3J0IGZ1bmN0aW9uIGlzRXh0ZXJuYWwocGF0aCkgewogIHJldHVybiAvXihodHRwcz86fG1haWx0bzp8dGVsOikvLnRlc3QocGF0aCk7Cn0KLyoqDQogKiBAcGFyYW0ge3N0cmluZ30gdXJsDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHZhbGlkVVJMKHVybCkgewogIHZhciByZWcgPSAvXihodHRwcz98ZnRwKTpcL1wvKFthLXpBLVowLTkuLV0rKDpbYS16QS1aMC05LiYlJC1dKykqQCkqKCgyNVswLTVdfDJbMC00XVswLTldfDFbMC05XXsyfXxbMS05XVswLTldPykoXC4oMjVbMC01XXwyWzAtNF1bMC05XXwxWzAtOV17Mn18WzEtOV0/WzAtOV0pKXszfXwoW2EtekEtWjAtOS1dK1wuKSpbYS16QS1aMC05LV0rXC4oY29tfGVkdXxnb3Z8aW50fG1pbHxuZXR8b3JnfGJpenxhcnBhfGluZm98bmFtZXxwcm98YWVyb3xjb29wfG11c2V1bXxbYS16QS1aXXsyfSkpKDpbMC05XSspKihcLygkfFthLXpBLVowLTkuLD8nXFwrJiUkIz1+Xy1dKykpKiQvOwogIHJldHVybiByZWcudGVzdCh1cmwpOwp9Ci8qKg0KICogQHBhcmFtIHtzdHJpbmd9IHN0cg0KICogQHJldHVybnMge0Jvb2xlYW59DQogKi8KCmV4cG9ydCBmdW5jdGlvbiB2YWxpZExvd2VyQ2FzZShzdHIpIHsKICB2YXIgcmVnID0gL15bYS16XSskLzsKICByZXR1cm4gcmVnLnRlc3Qoc3RyKTsKfQovKioNCiAqIEBwYXJhbSB7c3RyaW5nfSBzdHINCiAqIEByZXR1cm5zIHtCb29sZWFufQ0KICovCgpleHBvcnQgZnVuY3Rpb24gdmFsaWRVcHBlckNhc2Uoc3RyKSB7CiAgdmFyIHJlZyA9IC9eW0EtWl0rJC87CiAgcmV0dXJuIHJlZy50ZXN0KHN0cik7Cn0KLyoqDQogKiBAcGFyYW0ge3N0cmluZ30gc3RyDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHZhbGlkQWxwaGFiZXRzKHN0cikgewogIHZhciByZWcgPSAvXltBLVphLXpdKyQvOwogIHJldHVybiByZWcudGVzdChzdHIpOwp9Ci8qKg0KICogQHBhcmFtIHtzdHJpbmd9IGVtYWlsDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHZhbGlkRW1haWwoZW1haWwpIHsKICB2YXIgcmVnID0gL14oKFtePD4oKVxbXF1cXC4sOzpcc0AiXSsoXC5bXjw+KClcW1xdXFwuLDs6XHNAIl0rKSopfCgiLisiKSlAKChcW1swLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31cXSl8KChbYS16QS1aXC0wLTldK1wuKStbYS16QS1aXXsyLH0pKSQvOwogIHJldHVybiByZWcudGVzdChlbWFpbCk7Cn0KLyoqDQogKiBAcGFyYW0ge3N0cmluZ30gc3RyDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHN0cikgewogIGlmICh0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyB8fCBzdHIgaW5zdGFuY2VvZiBTdHJpbmcpIHsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgcmV0dXJuIGZhbHNlOwp9Ci8qKg0KICogQG1ldGhvZDogaXNBcnJheQ0KICogQGRlc2NyaXB0aW9uOiDliKTmlq3mmK/lkKbmmK/mlbDnu4QNCiAqIEBwYXJhbXM6IGFyZyDlvoXliKTmlq3lj4LmlbANCiAqIEByZXR1cm46IEJvb2xlYW4NCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7CiAgaWYgKHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAndW5kZWZpbmVkJykgewogICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmcpID09PSAnW29iamVjdCBBcnJheV0nOwogIH0KCiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJnKTsKfQovKioNCiAqIOWOu+mZpOepuuagvA0KICogQHBhcmFtICB7c3RyfQ0KICogQHBhcmFtICB7dHlwZX0gDQogKiAgICAgICB0eXBlOiAgMS3miYDmnInnqbrmoLwgIDIt5YmN5ZCO56m65qC8ICAzLeWJjeepuuagvCA0LeWQjuepuuagvA0KICogQHJldHVybiB7U3RyaW5nfQ0KICovCgpleHBvcnQgZnVuY3Rpb24gdHJpbVN0cihzdHIsIHR5cGUpIHsKICBpZiAoIXN0cikgewogICAgcmV0dXJuIHN0cjsKICB9CgogIHR5cGUgPSB0eXBlIHx8IDE7CiAgc3RyID0gc3RyLnRvU3RyaW5nKCk7CgogIHN3aXRjaCAodHlwZSkgewogICAgY2FzZSAxOgogICAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1xzKy9nLCAiIik7CgogICAgY2FzZSAyOgogICAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyheXHMqKXwoXHMqJCkvZywgIiIpOwoKICAgIGNhc2UgMzoKICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oXlxzKikvZywgIiIpOwoKICAgIGNhc2UgNDoKICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oXHMqJCkvZywgIiIpOwoKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBzdHI7CiAgfQp9Ci8qKg0KICog5piv5ZCm5q2j5pW05pWwDQogKiBAcGFyYW0geyp9IHN0ciANCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHBvc2l0aXZlSW50KHN0cikgewogIHZhciByZWcgPSAvXlswLTldKyQvOwogIHJldHVybiByZWcudGVzdChzdHIpOwp9Ci8qKg0KICog5piv5ZCm5pWw5a2XDQogKiBAcGFyYW0geyp9DQogKi8KCmV4cG9ydCBmdW5jdGlvbiBudW1iZXIoc3RyKSB7CiAgdmFyIHJlID0gL14oKFsxLTldWzAtOV0qXC5bMC05XVswLTldKil8KFxkXC5bMC05XVswLTldKil8KFsxLTldWzAtOV0qKXwoWzBdezF9KSkkL2c7CiAgcmV0dXJuIHJlLnRlc3Qoc3RyKTsKfQovKioNCiAqIOaJi+acuuWPt+eggeaYr+WQpuato+ehrg0KICogQHBhcmFtIHsqfSBzdHIgDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0gdHJ1ZS9mYWxzZQ0KICovCgpleHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVQaG9uZShzdHIpIHsKICByZXR1cm4gL14xKFszOF1bMC05XXw0WzU3OV18NVswLTMsNS05XXw2WzZdfDdbMDEzNTY3OF18OVs4OV0pXGR7OH0kLy50ZXN0KHN0cik7Cn0KLyoqDQogKiDlm7ror53mmK/lkKbmraPnoa4NCiAqIEBwYXJhbSB7Kn0gc3RyIA0KICogQHJldHVybnMge0Jvb2xlYW59IHRydWUvZmFsc2UNCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlVGVsKHN0cikgewogIHJldHVybiAvXigwXGR7MiwzfS1cZHs3LDh9KSgtXGR7MSw0fSk/JC8udGVzdChzdHIpOwp9Ci8qKg0KICog5paH5pys5piv5ZCm5ZCr5pyJ6KGo5oOFDQogKiBAcmV0dXJucyB7Qm9vbGVhbn0gdHJ1ZS9mYWxzZQ0KICovCgpleHBvcnQgZnVuY3Rpb24gY2hlY2tvdXRFbmpvbihzdHIpIHsKICB2YXIgcmVnID0gL1tcdUQ4M0N8XHVEODNEfFx1RDgzRV1bXHVEQzAwLVx1REZGRl1bXHUyMDBEfFx1RkUwRl18W1x1RDgzQ3xcdUQ4M0R8XHVEODNFXVtcdURDMDAtXHVERkZGXXxbMC05fCp8I11cdUZFMEZcdTIwRTN8WzAtOXwjXVx1MjBFM3xbXHUyMDNDLVx1MzI5OV1cdUZFMEZcdTIwMER8W1x1MjAzQy1cdTMyOTldXHVGRTBGfFtcdTIxMjItXHUyQjU1XXxcdTMwM0R8W1xBOXxcQUVdXHUzMDMwfFx1QTl8XHVBRXxcdTMwMzAvaWc7CiAgcmV0dXJuIHJlZy50ZXN0KHN0cik7Cn0KLyoqDQogKiDouqvku73or4Hlj7fmmK/lkKbmraPnoa4NCiAqIOWHveaVsOWPguaVsOW/hemhu+aYr+Wtl+espuS4su+8jOWboOS4uuS6jOS7o+i6q+S7veivgeWPt+eggeaYr+WNgeWFq+S9je+8jOiAjOWcqGphdmFzY3JpcHTkuK3vvIzljYHlhavkvY3nmoTmlbDlgLzkvJrotoXlh7rorqHnrpfojIPlm7TvvIzpgKDmiJDkuI3nsr7noa7nmoTnu5PmnpzvvIzlr7zoh7TmnIDlkI7kuKTkvY3lkozorqHnrpfnmoTlgLzkuI3kuIDoh7TvvIzku47ogIzor6Xlh73mlbDlh7rnjrDplJnor6/jgIINCiAqIEBwYXJhbSB7Kn0gaWRjb2RlIA0KICogQHJldHVybnMge0Jvb2xlYW59IHRydWUvZmFsc2UNCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGNoZWNrSURDYXJkKGlkY29kZSkgewogIC8vIOWKoOadg+WboOWtkAogIHZhciB3ZWlnaHRfZmFjdG9yID0gWzcsIDksIDEwLCA1LCA4LCA0LCAyLCAxLCA2LCAzLCA3LCA5LCAxMCwgNSwgOCwgNCwgMl07IC8vIOagoemqjOeggQoKICB2YXIgY2hlY2tfY29kZSA9IFsnMScsICcwJywgJ1gnLCAnOScsICc4JywgJzcnLCAnNicsICc1JywgJzQnLCAnMycsICcyJ107CiAgdmFyIGNvZGUgPSBpZGNvZGUgKyAiIjsKICB2YXIgbGFzdCA9IGlkY29kZVsxN107IC8v5pyA5ZCO5LiA5L2NCgogIHZhciBzZXZlbnRlZW4gPSBjb2RlLnN1YnN0cmluZygwLCAxNyk7IC8vIElTTyA3MDY0OjE5ODMuTU9EIDExLTIKICAvLyDliKTmlq3mnIDlkI7kuIDkvY3moKHpqoznoIHmmK/lkKbmraPnoa4KCiAgdmFyIGFyciA9IHNldmVudGVlbi5zcGxpdCgiIik7CiAgdmFyIGxlbiA9IGFyci5sZW5ndGg7CiAgdmFyIG51bSA9IDA7CgogIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgIG51bSA9IG51bSArIGFycltpXSAqIHdlaWdodF9mYWN0b3JbaV07CiAgfSAvLyDojrflj5bkvZnmlbAKCgogIHZhciByZXNpc3VlID0gbnVtICUgMTE7CiAgdmFyIGxhc3Rfbm8gPSBjaGVja19jb2RlW3Jlc2lzdWVdOyAvLyDmoLzlvI/nmoTmraPliJkKICAvLyDmraPliJnmgJ3ot68KCiAgLyoNCiAg56ys5LiA5L2N5LiN5Y+v6IO95pivMA0KICDnrKzkuozkvY3liLDnrKzlha3kvY3lj6/ku6XmmK8wLTkNCiAg56ys5LiD5L2N5Yiw56ys5Y2B5L2N5piv5bm05Lu977yM5omA5Lul5LiD5YWr5L2N5Li6MTnmiJbogIUyMA0KICDljYHkuIDkvY3lkozljYHkuozkvY3mmK/mnIjku73vvIzov5nkuKTkvY3mmK8wMS0xMuS5i+mXtOeahOaVsOWAvA0KICDljYHkuInkvY3lkozljYHlm5vkvY3mmK/ml6XmnJ/vvIzmmK/ku44wMS0zMeS5i+mXtOeahOaVsOWAvA0KICDljYHkupTvvIzljYHlha3vvIzljYHkuIPpg73mmK/mlbDlrZcwLTkNCiAg5Y2B5YWr5L2N5Y+v6IO95piv5pWw5a2XMC0577yM5Lmf5Y+v6IO95pivWA0KICAqLwoKICB2YXIgaWRjYXJkX3BhdHRlciA9IC9eWzEtOV1bMC05XXs1fShbMV1bOV1bMC05XXsyfXxbMl1bMF1bMHwxXVswLTldKShbMF1bMS05XXxbMV1bMHwxfDJdKShbMF1bMS05XXxbMXwyXVswLTldfFszXVswfDFdKVswLTldezN9KFswLTldfFtYXSkkLzsgLy8g5Yik5pat5qC85byP5piv5ZCm5q2j56GuCgogIHZhciBmb3JtYXQgPSBpZGNhcmRfcGF0dGVyLnRlc3QoaWRjb2RlKTsgLy8g6L+U5Zue6aqM6K+B57uT5p6c77yM5qCh6aqM56CB5ZKM5qC85byP5ZCM5pe25q2j56Gu5omN566X5piv5ZCI5rOV55qE6Lqr5Lu96K+B5Y+356CBCgogIHJldHVybiBsYXN0ID09PSBsYXN0X25vICYmIGZvcm1hdCA/IHRydWUgOiBmYWxzZTsKfQ=="},{"version":3,"names":["isExternal","path","test","validURL","url","reg","validLowerCase","str","validUpperCase","validAlphabets","validEmail","email","isString","String","isArray","arg","Array","Object","prototype","toString","call","trimStr","type","replace","positiveInt","number","re","validatePhone","validateTel","checkoutEnjon","checkIDCard","idcode","weight_factor","check_code","code","last","seventeen","substring","arr","split","len","length","num","i","resisue","last_no","idcard_patter","format"],"sources":["C:/Users/Administrator/Desktop/tuberculosis-fe/src/utils/validate.js"],"sourcesContent":["/**\r\n * @param {string} path\r\n * @returns {Boolean}\r\n */\r\nexport function isExternal(path) {\r\n  return /^(https?:|mailto:|tel:)/.test(path)\r\n}\r\n\r\n/**\r\n * @param {string} url\r\n * @returns {Boolean}\r\n */\r\nexport function validURL(url) {\r\n  const reg = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\r\n  return reg.test(url)\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n * @returns {Boolean}\r\n */\r\nexport function validLowerCase(str) {\r\n  const reg = /^[a-z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n * @returns {Boolean}\r\n */\r\nexport function validUpperCase(str) {\r\n  const reg = /^[A-Z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n * @returns {Boolean}\r\n */\r\nexport function validAlphabets(str) {\r\n  const reg = /^[A-Za-z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/**\r\n * @param {string} email\r\n * @returns {Boolean}\r\n */\r\nexport function validEmail(email) {\r\n  const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return reg.test(email)\r\n}\r\n\r\n/**\r\n * @param {string} str\r\n * @returns {Boolean}\r\n */\r\nexport function isString(str) {\r\n  if (typeof str === 'string' || str instanceof String) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * @method: isArray\r\n * @description: 判断是否是数组\r\n * @params: arg 待判断参数\r\n * @return: Boolean\r\n */\r\nexport function isArray(arg) {\r\n  if (typeof Array.isArray === 'undefined') {\r\n    return Object.prototype.toString.call(arg) === '[object Array]'\r\n  }\r\n  return Array.isArray(arg)\r\n}\r\n/**\r\n * 去除空格\r\n * @param  {str}\r\n * @param  {type} \r\n *       type:  1-所有空格  2-前后空格  3-前空格 4-后空格\r\n * @return {String}\r\n */\r\n export function trimStr(str, type){\r\n\tif(!str){\r\n\t\treturn str;\r\n\t}\r\n\ttype = type || 1;\r\n\tstr=str.toString();\r\n\tswitch (type) {\r\n\t  case 1:\r\n\t\treturn str.replace(/\\s+/g, \"\");\r\n\t  case 2:\r\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n\t  case 3:\r\n\t\treturn str.replace(/(^\\s*)/g, \"\");\r\n\t  case 4:\r\n\t\treturn str.replace(/(\\s*$)/g, \"\");\r\n\t  default:\r\n\t\treturn str;\r\n\t}\r\n  }\r\n/**\r\n * 是否正整数\r\n * @param {*} str \r\n */\r\nexport function positiveInt(str){\r\n\tlet reg=/^[0-9]+$/;\r\n\treturn reg.test(str);\r\n  }\r\n/**\r\n * 是否数字\r\n * @param {*}\r\n */\r\nexport function number(str){\r\n\tlet re =  /^(([1-9][0-9]*\\.[0-9][0-9]*)|(\\d\\.[0-9][0-9]*)|([1-9][0-9]*)|([0]{1}))$/g;\r\n\treturn re.test(str);\r\n}\r\n/**\r\n * 手机号码是否正确\r\n * @param {*} str \r\n * @returns {Boolean} true/false\r\n */\r\nexport function validatePhone(str){\r\n  return  /^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/.test(str);\r\n}\r\n/**\r\n * 固话是否正确\r\n * @param {*} str \r\n * @returns {Boolean} true/false\r\n */\r\nexport function validateTel(str){\r\n  return /^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$/.test(str);\r\n}\r\n/**\r\n * 文本是否含有表情\r\n * @returns {Boolean} true/false\r\n */\r\nexport function checkoutEnjon(str) {\r\n  var reg = /[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF][\\u200D|\\uFE0F]|[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF]|[0-9|*|#]\\uFE0F\\u20E3|[0-9|#]\\u20E3|[\\u203C-\\u3299]\\uFE0F\\u200D|[\\u203C-\\u3299]\\uFE0F|[\\u2122-\\u2B55]|\\u303D|[\\A9|\\AE]\\u3030|\\uA9|\\uAE|\\u3030/ig;\r\n  return reg.test(str);\r\n}\r\n/**\r\n * 身份证号是否正确\r\n * 函数参数必须是字符串，因为二代身份证号码是十八位，而在javascript中，十八位的数值会超出计算范围，造成不精确的结果，导致最后两位和计算的值不一致，从而该函数出现错误。\r\n * @param {*} idcode \r\n * @returns {Boolean} true/false\r\n */\r\n export function checkIDCard(idcode) {\r\n\t// 加权因子\r\n\tvar weight_factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\r\n\t// 校验码\r\n\tvar check_code = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\r\n\r\n\tvar code = idcode + \"\";\r\n\tvar last = idcode[17]; //最后一位\r\n\r\n\tvar seventeen = code.substring(0, 17);\r\n\r\n\t// ISO 7064:1983.MOD 11-2\r\n\t// 判断最后一位校验码是否正确\r\n\tvar arr = seventeen.split(\"\");\r\n\tvar len = arr.length;\r\n\tvar num = 0;\r\n\tfor (var i = 0; i < len; i++) {\r\n\t\tnum = num + arr[i] * weight_factor[i];\r\n\t}\r\n\r\n\t// 获取余数\r\n\tvar resisue = num % 11;\r\n\tvar last_no = check_code[resisue];\r\n\r\n\t// 格式的正则\r\n\t// 正则思路\r\n\t/*\r\n\t第一位不可能是0\r\n\t第二位到第六位可以是0-9\r\n\t第七位到第十位是年份，所以七八位为19或者20\r\n\t十一位和十二位是月份，这两位是01-12之间的数值\r\n\t十三位和十四位是日期，是从01-31之间的数值\r\n\t十五，十六，十七都是数字0-9\r\n\t十八位可能是数字0-9，也可能是X\r\n\t*/\r\n\tvar idcard_patter =\r\n\t\t/^[1-9][0-9]{5}([1][9][0-9]{2}|[2][0][0|1][0-9])([0][1-9]|[1][0|1|2])([0][1-9]|[1|2][0-9]|[3][0|1])[0-9]{3}([0-9]|[X])$/;\r\n\r\n\t// 判断格式是否正确\r\n\tvar format = idcard_patter.test(idcode);\r\n\r\n\t// 返回验证结果，校验码和格式同时正确才算是合法的身份证号码\r\n\treturn last === last_no && format ? true : false;\r\n}"],"mappings":"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"}]}