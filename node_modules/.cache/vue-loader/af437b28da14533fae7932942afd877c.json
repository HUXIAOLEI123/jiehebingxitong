{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\standardStatistical\\index.vue?vue&type=style&index=0&id=27e74652&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\standardStatistical\\index.vue","mtime":1679541068124},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678931311747},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678931317953},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\postcss-loader\\src\\index.js","mtime":1678931314216},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1678931310798},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":1678931316857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJveCB7DQogIG92ZXJmbG93OiBhdXRvOw0KfQ0KDQouc2VhcmNoIHsNCiAgaGVpZ2h0OiA1MHB4Ow0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi10b3A6IDQwcHg7DQogIHBhZGRpbmctcmlnaHQ6IDIwcHg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8SA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/standardStatistical","sourcesContent":["<template>\r\n  <div class=\"box\">\r\n    <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\" style=\"margin: 20px\">\r\n      <!-- <el-form-item label=\"行政区划\" prop=\"RegionCode\">\r\n        <my-cascader v-model=\"form.RegionCode\" :props=\"props\" isAccessControl clearable></my-cascader>\r\n      </el-form-item> -->\r\n\r\n      <el-form-item label=\"管理机构:\" prop=\"AdminOrganization\">\r\n        <el-cascader style=\"width: 100%\" :options=\"tenantData\" :props=\"propslist\" v-model=\"form.AdminOrganization\" clearable></el-cascader>\r\n      </el-form-item>\r\n      <el-form-item label=\"统计日期\" style=\"margin-left: 30px\">\r\n        <el-date-picker\r\n          v-model=\"value1\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          type=\"daterange\"\r\n          range-separator=\"至\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          align=\"center\"\r\n        ></el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item style=\"margin-left: 30px\">\r\n        <el-button type=\"primary\" @click=\"search\">查询</el-button>\r\n        <el-button type=\"primary\" @click=\"exportExcle\">导出</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-table :data=\"Response\" border :height=\"tableHeight\" v-loading=\"loading\" row-key=\"RegionCode\" lazy :load=\"load\">\r\n      <el-table-column prop=\"OrganizationName\" label=\"管理机构\" width=\"200\"></el-table-column>\r\n      <el-table-column prop=\"JHBZRS\" label=\"结核病总人数\" min-width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"YGLJHBRS\" label=\"已管理结核病人数\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"JSJJGQZBTZJCJGDJHBHZ\" label=\"经上级机构确诊并通知基层管理的结核患者\" width=\"300\"></el-table-column>\r\n      <el-table-column prop=\"HZGLL\" label=\"患者管理率\" sortable width=\"140\"></el-table-column>\r\n      <!-- <el-table-column prop=\"HZGLL\" width=\"140\">\r\n        <template slot=\"header\">\r\n          \r\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"\">\r\n            <i class=\"el-icon-top\"><i class=\"el-icon-bottom\"></i></i>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column> -->\r\n      <el-table-column prop=\"GZFYRS\" label=\"规则服药结核病人数\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"YSFCS\" label=\"应随访次数\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"SJSFCS\" label=\"实际随访次数\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"SJSFCS\" label=\"随访完成率\" sortable width=\"140\"></el-table-column>\r\n      <!-- <el-table-column prop=\"SFWCL\" width=\"140\">\r\n        <template slot=\"header\">\r\n          \r\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"患者管理的\">\r\n            <i class=\"el-icon-top\"><i class=\"el-icon-bottom\"></i></i>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column> -->\r\n      <el-table-column prop=\"BLFYRS\" label=\"不良反应人数\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"BLFYCZRS\" label=\"不良反应处置人数\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"BLFYCZL\" sortable label=\"不良反应处置率\" width=\"170\"></el-table-column>\r\n      <!-- <el-table-column prop=\"BLFYCZRS\" label=\"不良反应处置率\" width=\"170\">\r\n        <template slot=\"header\">\r\n          不良反应处置率\r\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"患者管理的\">\r\n            <i class=\"el-icon-top\"><i class=\"el-icon-bottom\"></i></i>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column> -->\r\n      <el-table-column prop=\"GZFYRS\" label=\"规则服药人数\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"BGZFYRS\" label=\"不规则服药人数\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"FYSPZHS\" label=\"服药视频转化数\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"FYSPZHL\" label=\"服药视频转化率\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"GZFYL\" sortable label=\"规则服药率\" width=\"150\"></el-table-column>\r\n      <!-- <el-table-column prop=\"GZFYL\" label=\"\" width=\"150\">\r\n        <template slot=\"header\">\r\n          规则服药率\r\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"患者管理的\">\r\n            <i class=\"el-icon-top\"><i class=\"el-icon-bottom\"></i></i>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column> -->\r\n    </el-table>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Pulmonarystandard, Pulmonarystandardexcle } from '@/api/report';\r\nimport { exportmanagementist } from '@/api/Person';\r\nimport { RegulatoryInfo } from '@/api/report';\r\nimport { getOrganizationList, getorgcascader, getuserDrop } from '@/api/organizationManagement.js';\r\n// 级联选择器\r\nimport MyCascader from '@/components/MyCascader';\r\nimport { reject } from 'q';\r\nimport Axios from 'axios';\r\nexport default {\r\n  name: 'StandardStatistical01',\r\n  components: { MyCascader },\r\n  data() {\r\n    return {\r\n      // 表单绑定数据\r\n      form: {\r\n        SelectOnly: false,\r\n        AdminOrganization: this.$utilsFun.getUserInfo(),\r\n        IsClosed: true,\r\n      },\r\n\r\n      tenantData: [\r\n        {\r\n          OrganizationId: this.$utilsFun.getUserInfo().authOrgId,\r\n          OrganizationName: this.$utilsFun.getUserInfo().authOrgName,\r\n          Children: [],\r\n        },\r\n      ], //机构数组\r\n      tableHeight: '300', //table高度\r\n      loading: false,\r\n      formInline: {},\r\n      RegionCode: '',\r\n      // 起始时间\r\n      value1: [],\r\n      // 表格展示数据\r\n      Response: [],\r\n      // 多级下拉\r\n      props: {\r\n        emitPath: false,\r\n        label: 'RegionName',\r\n        children: 'Children',\r\n        value: 'RegionCode',\r\n        multiple: false,\r\n        checkStrictly: true,\r\n        lazy: true,\r\n      },\r\n      propslist: {\r\n        value: 'OrganizationId',\r\n        label: 'OrganizationName',\r\n        children: 'Children',\r\n        checkStrictly: true,\r\n        emitPath: false,\r\n        lazy: true,\r\n        lazyLoad: this.lazyLoad,\r\n      },\r\n      form: {},\r\n      nodeList: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    var date = new Date();\r\n    var year = date.getFullYear();\r\n    this.value1.push(`${year}-01-01`);\r\n    this.value1.push(this.getNowDate());\r\n    this.form = { StartDate: this.value1[0], EndDate: this.value1[1], OrganizationId: this.$utilsFun.getUserInfo().authOrgId };\r\n    this.getRegionsList(this.form);\r\n    this.initTableHeight();\r\n    this.form.AdminOrganization = this.$utilsFun.getUserInfo().authOrgId;\r\n    console.log(this.value1, 'this.value1', this.form, 'this.form', this.$utilsFun.getUserInfo(), 'this.$utilsFun.getUserInfo().authOrgId');\r\n  },\r\n  methods: {\r\n    //获取管理机构,级联列表\r\n    async getorganizationlist() {\r\n      this.form.AdminOrganization = this.$utilsFun.getUserInfo().authOrgId;\r\n      const res = await getorgcascader(this.form.AdminOrganization);\r\n      console.log(res, '00');\r\n      this.tenantData = res.Response;\r\n    },\r\n    // 传递数据\r\n    async lazyLoad(node, resolve) {\r\n      console.log(node, '----', resolve, 'node, resolve');\r\n      this.nodeList = node.value;\r\n      let res = await getOrganizationList({\r\n        Org_OrganizationId: node.value,\r\n        PageNumber: 1,\r\n        PageSize: 9999,\r\n      });\r\n      console.log(res, 'chaudi ');\r\n      let data = [];\r\n      if (node.level > 0) {\r\n        data = res.Response.items;\r\n      }\r\n      resolve(data);\r\n    },\r\n\r\n    initTableHeight() {\r\n      this.$nextTick(() => {\r\n        let availHeight = window.screen.availHeight; //页面可视化高度\r\n        this.tableHeight = availHeight - 380;\r\n      });\r\n    },\r\n    // 获取当前时间\r\n    getNowDate() {\r\n      var date = new Date();\r\n      var seperator1 = '-';\r\n      var year = date.getFullYear();\r\n      var month = date.getMonth() + 1;\r\n      var strDate = date.getDate();\r\n      if (month >= 1 && month <= 9) {\r\n        month = '0' + month;\r\n      }\r\n      if (strDate >= 0 && strDate <= 9) {\r\n        strDate = '0' + strDate;\r\n      }\r\n      var currentdate = year + seperator1 + month + seperator1 + strDate;\r\n      return currentdate;\r\n    },\r\n    // 表格数据\r\n    getRegionsList(option) {\r\n      console.log(option, '表格数据');\r\n\r\n      this.loading = true;\r\n      // ----------------------------------------\r\n      // 后端说用线上接口,这个直接可使用,我没换,下面这行当参考\r\n      // Axios({\r\n      //   url: `http://zhjk.jxcdc.cn:8865/api/report/pulmonarystandard?OrganizationId=${this.form.OrganizationId}&EndDate=${this.form.EndDate}&StartDate=${this.form.StartDate}`,\r\n      //   method: 'get',\r\n      //   headers: { Authorization: 'Bearer ' + localStorage.getItem('TOKEN') },\r\n      // })\r\n      //   .then(res => {\r\n      //     console.log(res, 'res2');\r\n      //     this.Response = [...res.data.Response];\r\n      //     this.loading = false;\r\n      //   })\r\n      //   .catch(err => {\r\n      //     console.log(err, 'err');\r\n      //   });\r\n      // --------------------------------------------\r\n      try {\r\n        Pulmonarystandard(option)\r\n          .then(res => {\r\n            console.log(option, res, '只返回合计187行');\r\n            this.Response = [...res.Response];\r\n            this.loading = false;\r\n          })\r\n          .catch(err => {\r\n            console.log(reject.err, 'err');\r\n          });\r\n        console.log(this.Response, 'this.Response');\r\n      } catch (error) {\r\n        console.log(error, 'error');\r\n      }\r\n    },\r\n    // 导出功能\r\n    exportExcle() {\r\n      this.$baseConfirm('确认导出所有数据？', null, async () => {\r\n        const res = await Pulmonarystandardexcle({ ...this.form, ...this.paParams });\r\n        let { StatusCode, Message, Response } = res;\r\n        // 拿到源地址参数\r\n        let origin = process.env.VUE_APP_BASE;\r\n        if (StatusCode == 200) {\r\n          window.open(origin + res.Response);\r\n          this.$baseMessage('数据导出成功', 'success');\r\n        } else {\r\n          this.$baseMessage(`${Message}`, 'error');\r\n        }\r\n      });\r\n    },\r\n\r\n    // 表格下钻\r\n    async load(tree, treeNode, resolve) {},\r\n    headStyle() {\r\n      return 'text-align:center;';\r\n    },\r\n    headStyles() {\r\n      return 'text-align:center;color: #373737 !important;';\r\n    },\r\n\r\n    // 查询 向服务器发送请求\r\n    search() {\r\n      let { value1 } = this;\r\n      let option = {\r\n        OrganizationId: this.nodeList,\r\n        StartDate: value1[0],\r\n        EndDate: value1[1],\r\n      };\r\n      console.log(option, 'option');\r\n      this.getRegionsList(option);\r\n    },\r\n  },\r\n  // 递归处理分类回显问题\r\n  // key就是接口拿到的值,treeData是全部数据\r\n  changeDetSelect(key, treeData) {\r\n    let arr = []; // 在递归时操作的数组\r\n    let returnArr = []; // 存放结果的数组\r\n    let depth = 0; // 定义全局层级\r\n    // 定义递归函数\r\n    function childrenEach(childrenData, depthN) {\r\n      for (var j = 0; j < childrenData.length; j++) {\r\n        depth = depthN; // 将执行的层级赋值 到 全局层级\r\n        arr[depthN] = childrenData[j].id;\r\n        if (childrenData[j].id == key) {\r\n          returnArr = arr.slice(0, depthN + 1); //将目前匹配的数组，截断并保存到结果数组，\r\n          break;\r\n        } else {\r\n          if (childrenData[j].children) {\r\n            depth++;\r\n            childrenEach(childrenData[j].children, depth);\r\n          }\r\n        }\r\n      }\r\n      return returnArr;\r\n    }\r\n    return childrenEach(treeData, depth);\r\n  },\r\n  editClick(row) {\r\n    this.dialogFormVisible = true;\r\n    this.pids = this.changeDetSelect(row.id, this.tableData);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.box {\r\n  overflow: auto;\r\n}\r\n\r\n.search {\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n  padding-right: 20px;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}]}