{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\homeComponents\\cascaderRegion.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\src\\views\\homeComponents\\cascaderRegion.vue","mtime":1678931188637},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1678931314285},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678931310818},{"path":"C:\\Users\\Administrator\\Desktop\\tuberculosis-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":1678931316857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmltcG9ydCB7IHJlZ2lvbnMsIGZ1bGxwYXJlbnRyZWdpb24sIGdldFJlZ2lvbnMgfSBmcm9tICJAL2FwaS9pbnB1dHNlbGVjdC5qcyI7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJSZWdpb24iLA0KICBwcm9wczogew0KICAgIC8v5piv5ZCm5Y+v5riF56m677yM5LiN5Lyg6buY6K6k5pivDQogICAgY2xlYXJhYmxlOiB7DQogICAgICB0eXBlOiBbQm9vbGVhbl0sDQogICAgICBkZWZhdWx0OiB0cnVlLA0KICAgIH0sDQogICAgLy/mmK/lkKbmuIXnqbrpgInpobnlgLwNCiAgICBpc0NsZWFyYWJsZVZhbDogew0KICAgICAgdHlwZTogW0Jvb2xlYW5dLA0KICAgICAgZGVmYXVsdDogZmFsc2UsDQogICAgfSwNCiAgICAvL+acrOe6p+WcsOWMuue8lueggSzkvKDlhaXmraTlj4LmlbDlsIbkvZzkuLrooYzmlL/ljLrliJLnrKzkuIDnuqflvIDlp4sNCiAgICBjdXJyZW50UmVnaW9uQ29kZTogew0KICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwNCiAgICAgIGRlZmF1bHQ6ICIiLA0KICAgIH0sDQogICAgLy/lrZDnuqflnLDljLrnvJbnoIEs5Lyg5YWl5q2k5Y+C5pWw5bCG6I635Y+W5omA5pyJ5LiK57qn6KGM5pS/5Yy65YiSDQogICAgY2hpbGRSZWdpb25Db2RlOiB7DQogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLA0KICAgICAgZGVmYXVsdDogIiIsDQogICAgfSwNCiAgfSwNCiAgZGF0YSAoKSB7DQogICAgbGV0IF9zZWxmID0gdGhpczsNCiAgICByZXR1cm4gew0KICAgICAgc2VsZWN0ZWRWYWx1ZTogWyczNjAwMDAwMDAwMDAnXSwNCiAgICAgIG9wdGlvbnM6IFtdLA0KICAgICAgcmVnaW9uRGF0YTogW10sDQogICAgICBwcm9wczogew0KICAgICAgICBsYXp5OiB0cnVlLA0KICAgICAgICBsYWJlbDogIlJlZ2lvbk5hbWUiLA0KICAgICAgICB2YWx1ZTogIlJlZ2lvbkNvZGUiLA0KICAgICAgICBjaGVja1N0cmljdGx5OiB0cnVlLCAvL+aOp+WItuWNlemAiemAieaLqeS7u+aEj+S4gOe6p+mAiemhuQ0KICAgICAgICBsYXp5TG9hZCAobm9kZSwgcmVzb2x2ZSkgew0KICAgICAgICAgIGxldCBsb2NhbENvZGUgPSAoSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlckluZm8nKSkgfHwge30pLmF1dGhSZWdpb25Db2RlOw0KICAgICAgICAgIGlmICghbm9kZS52YWx1ZSkgew0KICAgICAgICAgICAgbm9kZS52YWx1ZSA9IGxvY2FsQ29kZQ0KICAgICAgICAgIH0NCiAgICAgICAgICBsZXQgeyBsZXZlbCB9ID0gbm9kZTsNCiAgICAgICAgICBfc2VsZi5nZXRDaGlsZFJlZ2lvbihub2RlPy52YWx1ZSwgbGV2ZWwpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgcmVzb2x2ZShyZXMpOw0KICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KICAgICAgfSwNCiAgICB9Ow0KICB9LA0KICB3YXRjaDogew0KICAgIGlzQ2xlYXJhYmxlVmFsOiB7DQogICAgICBpbW1lZGlhdGU6IHRydWUsDQogICAgICBoYW5kbGVyICh2YWwpIHsNCiAgICAgICAgaWYgKHZhbCkgew0KICAgICAgICAgIHRoaXMuc2VsZWN0ZWRWYWx1ZSA9IFtdOw0KICAgICAgICB9DQogICAgICB9LA0KICAgIH0sDQogICAgY3VycmVudFJlZ2lvbkNvZGU6IHsNCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwNCiAgICAgIGhhbmRsZXIgKHZhbCkgew0KICAgICAgICBpZiAodmFsKSB7DQogICAgICAgICAgdGhpcy5nZXRDdXJyZW50UmVnaW9uKCk7DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgfSwNCiAgICBjaGlsZFJlZ2lvbkNvZGU6IHsNCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwNCiAgICAgIGhhbmRsZXIgKHZhbCkgew0KICAgICAgICBpZiAodmFsKSB7DQogICAgICAgICAgdGhpcy5mdWxsUGFyZW50UmVnaW9uKCk7DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8qKg0KICAgICAqIDEu6I635Y+W5Lyg6YCS55qE6KGM5pS/5Yy65YiS5pWw5o2uDQogICAgICovDQogICAgYXN5bmMgZ2V0Q3VycmVudFJlZ2lvbiAobGV2ZWwpIHsNCg0KICAgICAgY29uc3QgeyBSZXNwb25zZSB9ID0gYXdhaXQgcmVnaW9ucyh0aGlzLmN1cnJlbnRSZWdpb25Db2RlKTsNCg0KICAgICAgbGV0IG5vZGVzID0gdGhpcy5oYW5kbGVEYXRhKFJlc3BvbnNlLCBsZXZlbCk7DQogICAgICB0aGlzLm9wdGlvbnMgPSBub2RlczsNCiAgICB9LA0KICAgIC8qKg0KICAgICAqIDIu5qC55o2u5Lyg6YCS55qE6KGM5pS/5Yy65YiS57yW56CB6I635Y+W5a6D55qE5omA5pyJ5LiK57qn5Y+K5pys6LqrDQogICAgICovDQogICAgYXN5bmMgZnVsbFBhcmVudFJlZ2lvbiAoKSB7DQogICAgICBjb25zdCByZXMgPSBhd2FpdCBmdWxscGFyZW50cmVnaW9uKHsgcmVnaW9uQ29kZTogdGhpcy5jaGlsZFJlZ2lvbkNvZGUgfSk7DQogICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmZpbHRlclJlZ2lvbkRhdGEocmVzKTsNCiAgICAgIHRoaXMuY2hhbmdlSG9zcCh0aGlzLnNlbGVjdGVkVmFsdWUpDQogICAgfSwNCiAgICAvL+mAkuW9kuWkhOeQhuihjOaUv+WMuuWIkuaVsOaNrg0KICAgIGZpbHRlclJlZ2lvbkRhdGEgKGRhdGEpIHsNCiAgICAgIGlmICghZGF0YSAmJiBkYXRhLmxlbmd0aCkgew0KICAgICAgICByZXR1cm4gW107DQogICAgICB9DQogICAgICBsZXQgbmV3UmVnaW9uID0gW107IC8v57uE6KOF5paw5pWw5o2uDQogICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gZGF0YS5sZW5ndGg7IGkgPCBsZW47IGkrKykgew0KICAgICAgICBkYXRhW2ldLmxlYWYgPSBkYXRhW2ldLlJlZ2lvbkxldmVsID49IDY7DQogICAgICAgIGRhdGFbaV0uY2hpbGRyZW4gPSBkYXRhW2ldPy5DaGlsZHJlbjsNCiAgICAgICAgbmV3UmVnaW9uLnB1c2goZGF0YVtpXSk7DQogICAgICAgIGlmICh0aGlzLmNoaWxkUmVnaW9uQ29kZSA9PSBkYXRhW2ldLlJlZ2lvbkNvZGUpIHsNCiAgICAgICAgICB0aGlzLnNlbGVjdGVkVmFsdWUgPSBkYXRhW2ldLkNvZGVSZWxhdGlvblNoaXAuc3BsaXQoIiwiKTsNCiAgICAgICAgICB0aGlzLnNlbGVjdGVkVmFsdWUucHVzaCh0aGlzLmNoaWxkUmVnaW9uQ29kZSk7DQogICAgICAgIH0NCiAgICAgICAgaWYgKGRhdGFbaV0/LkNoaWxkcmVuKSB7DQogICAgICAgICAgdGhpcy5maWx0ZXJSZWdpb25EYXRhKGRhdGFbaV0uQ2hpbGRyZW4pOw0KICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gbmV3UmVnaW9uOw0KICAgIH0sDQogICAgLy/ojrflj5bkuIvnuqfooYzmlL/ljLrliJLmlbDmja4NCiAgICBnZXRDaGlsZFJlZ2lvbiAoUmVnaW9uQ29kZSwgbGV2ZWwpIHsNCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7DQogICAgICAgIHJlZ2lvbnMoUmVnaW9uQ29kZSkudGhlbihyZXMgPT4gew0KICAgICAgICAgIGxldCByZXN1bHQ7DQogICAgICAgICAgcmVzdWx0ID0gcmVzLlJlc3BvbnNlDQogICAgICAgICAgcmVzb2x2ZShyZXN1bHQpDQogICAgICAgIH0pDQogICAgICB9KQ0KICAgIH0sDQogICAgaGFuZGxlRGF0YSAoZGF0YSwgbGV2ZWwpIHsNCiAgICAgIGxldCBub2RlcyA9IFtdOw0KICAgICAgZGF0YS5mb3JFYWNoKChlKSA9PiB7DQogICAgICAgIGUubGVhZiA9IGxldmVsID49IDY7DQogICAgICAgIG5vZGVzLnB1c2goZSk7DQogICAgICB9KTsNCiAgICAgIHJldHVybiBub2RlczsNCiAgICB9LA0KICAgIGFzeW5jIGNoYW5nZUhvc3AgKGRhdGEpIHsNCiAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHsNCiAgICAgICAgdGhpcy4kZW1pdCgiY2hhbmdlUmVnaW9uIiwgZGF0YVtkYXRhLmxlbmd0aCAtIDFdKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJGVtaXQoImNoYW5nZVJlZ2lvbiIsICczNjAwMDAwMDAwMDAnKTsNCiAgICAgICAgdGhpcy5zZWxlY3RlZFZhbHVlID0gdGhpcy4kb3B0aW9ucy5kYXRhKCkuc2VsZWN0ZWRWYWx1ZQ0KICAgICAgfQ0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["cascaderRegion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"cascaderRegion.vue","sourceRoot":"src/views/homeComponents","sourcesContent":["<template>\r\n  <!-- 行政区划子组件 -->\r\n  <!-- :options=\"options\" -->\r\n  <el-cascader\r\n    class=\"cascader-region\"\r\n    :props=\"props\"\r\n    :clearable=\"clearable\"\r\n    v-model=\"selectedValue\"\r\n    placeholder=\"\"\r\n    @change=\"changeHosp\"\r\n  ></el-cascader>\r\n</template>\r\n<script>\r\n\r\nimport { regions, fullparentregion, getRegions } from \"@/api/inputselect.js\";\r\nexport default {\r\n  name: \"Region\",\r\n  props: {\r\n    //是否可清空，不传默认是\r\n    clearable: {\r\n      type: [Boolean],\r\n      default: true,\r\n    },\r\n    //是否清空选项值\r\n    isClearableVal: {\r\n      type: [Boolean],\r\n      default: false,\r\n    },\r\n    //本级地区编码,传入此参数将作为行政区划第一级开始\r\n    currentRegionCode: {\r\n      type: [String, Number],\r\n      default: \"\",\r\n    },\r\n    //子级地区编码,传入此参数将获取所有上级行政区划\r\n    childRegionCode: {\r\n      type: [String, Number],\r\n      default: \"\",\r\n    },\r\n  },\r\n  data () {\r\n    let _self = this;\r\n    return {\r\n      selectedValue: ['360000000000'],\r\n      options: [],\r\n      regionData: [],\r\n      props: {\r\n        lazy: true,\r\n        label: \"RegionName\",\r\n        value: \"RegionCode\",\r\n        checkStrictly: true, //控制单选选择任意一级选项\r\n        lazyLoad (node, resolve) {\r\n          let localCode = (JSON.parse(localStorage.getItem('userInfo')) || {}).authRegionCode;\r\n          if (!node.value) {\r\n            node.value = localCode\r\n          }\r\n          let { level } = node;\r\n          _self.getChildRegion(node?.value, level).then((res) => {\r\n            resolve(res);\r\n          });\r\n        },\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    isClearableVal: {\r\n      immediate: true,\r\n      handler (val) {\r\n        if (val) {\r\n          this.selectedValue = [];\r\n        }\r\n      },\r\n    },\r\n    currentRegionCode: {\r\n      immediate: true,\r\n      handler (val) {\r\n        if (val) {\r\n          this.getCurrentRegion();\r\n        }\r\n      },\r\n    },\r\n    childRegionCode: {\r\n      immediate: true,\r\n      handler (val) {\r\n        if (val) {\r\n          this.fullParentRegion();\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * 1.获取传递的行政区划数据\r\n     */\r\n    async getCurrentRegion (level) {\r\n\r\n      const { Response } = await regions(this.currentRegionCode);\r\n\r\n      let nodes = this.handleData(Response, level);\r\n      this.options = nodes;\r\n    },\r\n    /**\r\n     * 2.根据传递的行政区划编码获取它的所有上级及本身\r\n     */\r\n    async fullParentRegion () {\r\n      const res = await fullparentregion({ regionCode: this.childRegionCode });\r\n      this.options = this.filterRegionData(res);\r\n      this.changeHosp(this.selectedValue)\r\n    },\r\n    //递归处理行政区划数据\r\n    filterRegionData (data) {\r\n      if (!data && data.length) {\r\n        return [];\r\n      }\r\n      let newRegion = []; //组装新数据\r\n      for (let i = 0, len = data.length; i < len; i++) {\r\n        data[i].leaf = data[i].RegionLevel >= 6;\r\n        data[i].children = data[i]?.Children;\r\n        newRegion.push(data[i]);\r\n        if (this.childRegionCode == data[i].RegionCode) {\r\n          this.selectedValue = data[i].CodeRelationShip.split(\",\");\r\n          this.selectedValue.push(this.childRegionCode);\r\n        }\r\n        if (data[i]?.Children) {\r\n          this.filterRegionData(data[i].Children);\r\n        }\r\n      }\r\n      return newRegion;\r\n    },\r\n    //获取下级行政区划数据\r\n    getChildRegion (RegionCode, level) {\r\n      return new Promise((resolve, reject) => {\r\n        regions(RegionCode).then(res => {\r\n          let result;\r\n          result = res.Response\r\n          resolve(result)\r\n        })\r\n      })\r\n    },\r\n    handleData (data, level) {\r\n      let nodes = [];\r\n      data.forEach((e) => {\r\n        e.leaf = level >= 6;\r\n        nodes.push(e);\r\n      });\r\n      return nodes;\r\n    },\r\n    async changeHosp (data) {\r\n      if (data.length > 0) {\r\n        this.$emit(\"changeRegion\", data[data.length - 1]);\r\n      } else {\r\n        this.$emit(\"changeRegion\", '360000000000');\r\n        this.selectedValue = this.$options.data().selectedValue\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n</style>"]}]}